function [u, Wc, Pc, Wr] = CtrlPlanarRigidBody(t, z, param, traj)

% model param
m = param.m;
sx = param.sx;
sy = param.sy;
Jzz = param.Jzz;

% closed loop param
mc = param.mc;
dc = param.dc;
kc = param.kc;
scx = param.scx;
scy = param.scy;
lcx = param.lcx;
lcy = param.lcy;
hcx = param.hcx;
hcy = param.hcy;
Jczz = param.Jczz;
sigczz = param.sigczz;
kapczz = param.kapczz;

% model state
x = z(1:4);
xi = z(5:7);
rx = x(1);
ry = x(2);
sa = x(3);
ca = x(4);
vx = xi(1);
vy = xi(2);
wz = xi(3);

% reference 
xR = interp1(traj.t, traj.x', t)';
xiR = interp1(traj.t, traj.xi', t)';
xiRd = interp1(traj.t, traj.xid', t)';
rxR = xR(1);
ryR = xR(2);
saR = xR(3);
caR = xR(4);
vxR = xiR(1);
vyR = xiR(2);
wzR = xiR(3);

% model forces
A = [x(4) -x(3) 0; x(3) x(4) 0; 0 0 x(4); 0 0 -x(3);];
M = [m 0 -m * sy; 0 m m * sx; -m * sy m * sx Jzz;];
f = [-m * sx * xi(3) ^ 2 - m * xi(2) * xi(3); -m * sy * xi(3) ^ 2 + m * xi(1) * xi(3); m * sx * xi(1) * xi(3) + m * sy * xi(2) * xi(3);];
B = [1 0 0; 0 1 0; 0 0 1;];
Ba = M\B;

% closed loop forces
if (param.CtrlMode == 1)
  Mc = [mc 0 -mc * scy; 0 mc mc * scx; -mc * scy mc * scx Jczz;];
  fc = [-mc * ((x(3) * xR(3) + x(4) * xR(4)) * xiRd(1) + (x(3) * xR(4) - x(4) * xR(3)) * xiRd(2) + (-(x(3) * xR(3) + x(4) * xR(4)) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiRd(3) + (-x(3) * xR(4) * xi(3) + x(3) * xR(4) * xiR(3) + x(4) * xR(3) * xi(3) - x(4) * xR(3) * xiR(3)) * xiR(1) + (x(3) * xR(3) * xi(3) - x(3) * xR(3) * xiR(3) + x(4) * xR(4) * xi(3) - x(4) * xR(4) * xiR(3)) * xiR(2) + (((x(3) * xR(3) + x(4) * xR(4)) * xR(3) + xR(4) * (x(3) * xR(4) - x(4) * xR(3))) * (-x(3) * xi(2) + x(4) * xi(1)) + (-(x(3) * xR(3) + x(4) * xR(4)) * xR(4) + xR(3) * (x(3) * xR(4) - x(4) * xR(3))) * (x(3) * xi(1) + x(4) * xi(2)) + (-xR(3) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * xR(4)) * x(4) * xi(3) - (-xR(4) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) - (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * xR(3)) * x(3) * xi(3) + (-(x(3) * xR(3) + x(4) * xR(4)) * xR(3) - xR(4) * (x(3) * xR(4) - x(4) * xR(3))) * (-xR(3) * xiR(2) + xR(4) * xiR(1)) + ((x(3) * xR(3) + x(4) * xR(4)) * xR(4) - xR(3) * (x(3) * xR(4) - x(4) * xR(3))) * (xR(3) * xiR(1) + xR(4) * xiR(2)) + (-x(3) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) - (x(3) * xR(3) + x(4) * xR(4)) * (-x(1) + xR(1)) + (x(2) - xR(2)) * (x(3) * xR(4) - x(4) * xR(3)) - (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * x(4)) * xR(4) * xiR(3) - (-x(4) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) - (x(3) * xR(3) + x(4) * xR(4)) * (x(2) - xR(2)) + (x(1) - xR(1)) * (x(3) * xR(4) - x(4) * xR(3)) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * x(3)) * xR(3) * xiR(3)) * xiR(3)) + mc * scy * xiRd(3) - mc * xi(3) * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4)) * (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) + (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) - mc * scx * xi(3) * (xi(3) - xiR(3)) + dc * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (-(x(3) * xR(3) + x(4) * xR(4)) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) - dc * lcy * (xi(3) - xiR(3)) + (hcx * kc * x(4) - hcx * kc * xR(4) - hcy * kc * x(3) + hcy * kc * xR(3) + kc * x(1) - kc * xR(1)) * x(4) + (hcx * kc * x(3) - hcx * kc * xR(3) + hcy * kc * x(4) - hcy * kc * xR(4) + kc * x(2) - kc * xR(2)) * x(3); -mc * ((-x(3) * xR(4) + x(4) * xR(3)) * xiRd(1) + (x(3) * xR(3) + x(4) * xR(4)) * xiRd(2) + ((x(3) * xR(3) + x(4) * xR(4)) * (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) + (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiRd(3) + (-x(3) * xR(3) * xi(3) + x(3) * xR(3) * xiR(3) - x(4) * xR(4) * xi(3) + x(4) * xR(4) * xiR(3)) * xiR(1) + (-x(3) * xR(4) * xi(3) + x(3) * xR(4) * xiR(3) + x(4) * xR(3) * xi(3) - x(4) * xR(3) * xiR(3)) * xiR(2) + (((x(3) * xR(3) + x(4) * xR(4)) * xR(4) - xR(3) * (x(3) * xR(4) - x(4) * xR(3))) * (-x(3) * xi(2) + x(4) * xi(1)) + ((x(3) * xR(3) + x(4) * xR(4)) * xR(3) + xR(4) * (x(3) * xR(4) - x(4) * xR(3))) * (x(3) * xi(1) + x(4) * xi(2)) + ((xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * xR(3) + xR(4) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2)))) * x(4) * xi(3) - (-xR(3) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * xR(4)) * x(3) * xi(3) + (-(x(3) * xR(3) + x(4) * xR(4)) * xR(4) + xR(3) * (x(3) * xR(4) - x(4) * xR(3))) * (-xR(3) * xiR(2) + xR(4) * xiR(1)) + (-(x(3) * xR(3) + x(4) * xR(4)) * xR(3) - xR(4) * (x(3) * xR(4) - x(4) * xR(3))) * (xR(3) * xiR(1) + xR(4) * xiR(2)) + ((xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * x(3) + (x(3) * xR(3) + x(4) * xR(4)) * (x(2) - xR(2)) + (-x(1) + xR(1)) * (x(3) * xR(4) - x(4) * xR(3)) - x(4) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2)))) * xR(4) * xiR(3) - ((xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * x(4) + (x(3) * xR(3) + x(4) * xR(4)) * (x(1) - xR(1)) + (x(2) - xR(2)) * (x(3) * xR(4) - x(4) * xR(3)) + x(3) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2)))) * xR(3) * xiR(3)) * xiR(3)) - mc * scx * xiRd(3) + mc * xi(3) * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (-(x(3) * xR(3) + x(4) * xR(4)) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) - mc * scy * xi(3) * (xi(3) - xiR(3)) + dc * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4)) * (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) + (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + dc * lcx * (xi(3) - xiR(3)) - (hcx * kc * x(4) - hcx * kc * xR(4) - hcy * kc * x(3) + hcy * kc * xR(3) + kc * x(1) - kc * xR(1)) * x(3) + (hcx * kc * x(3) - hcx * kc * xR(3) + hcy * kc * x(4) - hcy * kc * xR(4) + kc * x(2) - kc * xR(2)) * x(4); mc * scy * ((x(3) * xR(3) + x(4) * xR(4)) * xiRd(1) + (x(3) * xR(4) - x(4) * xR(3)) * xiRd(2) + (-(x(3) * xR(3) + x(4) * xR(4)) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiRd(3) + (-x(3) * xR(4) * xi(3) + x(3) * xR(4) * xiR(3) + x(4) * xR(3) * xi(3) - x(4) * xR(3) * xiR(3)) * xiR(1) + (x(3) * xR(3) * xi(3) - x(3) * xR(3) * xiR(3) + x(4) * xR(4) * xi(3) - x(4) * xR(4) * xiR(3)) * xiR(2) + (((x(3) * xR(3) + x(4) * xR(4)) * xR(3) + xR(4) * (x(3) * xR(4) - x(4) * xR(3))) * (-x(3) * xi(2) + x(4) * xi(1)) + (-(x(3) * xR(3) + x(4) * xR(4)) * xR(4) + xR(3) * (x(3) * xR(4) - x(4) * xR(3))) * (x(3) * xi(1) + x(4) * xi(2)) + (-xR(3) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * xR(4)) * x(4) * xi(3) - (-xR(4) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) - (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * xR(3)) * x(3) * xi(3) + (-(x(3) * xR(3) + x(4) * xR(4)) * xR(3) - xR(4) * (x(3) * xR(4) - x(4) * xR(3))) * (-xR(3) * xiR(2) + xR(4) * xiR(1)) + ((x(3) * xR(3) + x(4) * xR(4)) * xR(4) - xR(3) * (x(3) * xR(4) - x(4) * xR(3))) * (xR(3) * xiR(1) + xR(4) * xiR(2)) + (-x(3) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) - (x(3) * xR(3) + x(4) * xR(4)) * (-x(1) + xR(1)) + (x(2) - xR(2)) * (x(3) * xR(4) - x(4) * xR(3)) - (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * x(4)) * xR(4) * xiR(3) - (-x(4) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) - (x(3) * xR(3) + x(4) * xR(4)) * (x(2) - xR(2)) + (x(1) - xR(1)) * (x(3) * xR(4) - x(4) * xR(3)) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * x(3)) * xR(3) * xiR(3)) * xiR(3)) - mc * scx * ((-x(3) * xR(4) + x(4) * xR(3)) * xiRd(1) + (x(3) * xR(3) + x(4) * xR(4)) * xiRd(2) + ((x(3) * xR(3) + x(4) * xR(4)) * (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) + (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiRd(3) + (-x(3) * xR(3) * xi(3) + x(3) * xR(3) * xiR(3) - x(4) * xR(4) * xi(3) + x(4) * xR(4) * xiR(3)) * xiR(1) + (-x(3) * xR(4) * xi(3) + x(3) * xR(4) * xiR(3) + x(4) * xR(3) * xi(3) - x(4) * xR(3) * xiR(3)) * xiR(2) + (((x(3) * xR(3) + x(4) * xR(4)) * xR(4) - xR(3) * (x(3) * xR(4) - x(4) * xR(3))) * (-x(3) * xi(2) + x(4) * xi(1)) + ((x(3) * xR(3) + x(4) * xR(4)) * xR(3) + xR(4) * (x(3) * xR(4) - x(4) * xR(3))) * (x(3) * xi(1) + x(4) * xi(2)) + ((xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * xR(3) + xR(4) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2)))) * x(4) * xi(3) - (-xR(3) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * xR(4)) * x(3) * xi(3) + (-(x(3) * xR(3) + x(4) * xR(4)) * xR(4) + xR(3) * (x(3) * xR(4) - x(4) * xR(3))) * (-xR(3) * xiR(2) + xR(4) * xiR(1)) + (-(x(3) * xR(3) + x(4) * xR(4)) * xR(3) - xR(4) * (x(3) * xR(4) - x(4) * xR(3))) * (xR(3) * xiR(1) + xR(4) * xiR(2)) + ((xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * x(3) + (x(3) * xR(3) + x(4) * xR(4)) * (x(2) - xR(2)) + (-x(1) + xR(1)) * (x(3) * xR(4) - x(4) * xR(3)) - x(4) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2)))) * xR(4) * xiR(3) - ((xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * x(4) + (x(3) * xR(3) + x(4) * xR(4)) * (x(1) - xR(1)) + (x(2) - xR(2)) * (x(3) * xR(4) - x(4) * xR(3)) + x(3) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2)))) * xR(3) * xiR(3)) * xiR(3)) - Jczz * xiRd(3) + mc * scx * xi(3) * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (-(x(3) * xR(3) + x(4) * xR(4)) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + mc * scy * xi(3) * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4)) * (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) + (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) - dc * lcy * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (-(x(3) * xR(3) + x(4) * xR(4)) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + dc * lcx * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4)) * (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) + (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + sigczz * (xi(3) - xiR(3)) + (hcx * kc * x(2) - hcx * kc * xR(2) - hcy * kc * x(1) + hcy * kc * xR(1) - kapczz * xR(3)) * x(4) - (hcx * kc * x(1) - hcx * kc * xR(1) + hcy * kc * x(2) - hcy * kc * xR(2) - kapczz * xR(4)) * x(3);];
  Tc = ((xi(1) / 0.2e1 - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) / 0.2e1 - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) / 0.2e1 - (-(x(3) * xR(3) + x(4) * xR(4)) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3) / 0.2e1) * mc - (xi(3) / 0.2e1 - xiR(3) / 0.2e1) * mc * scy) * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (-(x(3) * xR(3) + x(4) * xR(4)) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + ((xi(2) / 0.2e1 - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) / 0.2e1 - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) / 0.2e1 - ((x(3) * xR(3) + x(4) * xR(4)) * (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) + (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3) / 0.2e1) * mc + (xi(3) / 0.2e1 - xiR(3) / 0.2e1) * mc * scx) * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4)) * (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) + (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + (-(xi(1) / 0.2e1 - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) / 0.2e1 - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) / 0.2e1 - (-(x(3) * xR(3) + x(4) * xR(4)) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3) / 0.2e1) * mc * scy + (xi(2) / 0.2e1 - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) / 0.2e1 - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) / 0.2e1 - ((x(3) * xR(3) + x(4) * xR(4)) * (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) + (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3) / 0.2e1) * mc * scx + (xi(3) / 0.2e1 - xiR(3) / 0.2e1) * Jczz) * (xi(3) - xiR(3));
  Vc = kc * x(1) ^ 2 / 0.2e1 + kc * xR(1) ^ 2 / 0.2e1 + kc * x(2) ^ 2 / 0.2e1 + kc * xR(2) ^ 2 / 0.2e1 + x(4) * hcx * kc * x(1) - x(4) * hcx * kc * xR(1) + x(4) * hcy * kc * x(2) - x(4) * hcy * kc * xR(2) + hcx * kc * x(2) * x(3) - hcx * kc * xR(2) * x(3) - hcy * kc * x(1) * x(3) + hcy * kc * xR(1) * x(3) - xR(4) * hcy * kc * x(2) + xR(4) * hcy * kc * xR(2) + hcy * kc * x(1) * xR(3) - hcy * kc * xR(1) * xR(3) - xR(4) * hcx * kc * x(1) + xR(4) * hcx * kc * xR(1) - hcx * kc * x(2) * xR(3) + hcx * kc * xR(2) * xR(3) + kapczz - kc * x(2) * xR(2) - kapczz * x(3) * xR(3) - kc * x(1) * xR(1) - x(4) * xR(4) * kapczz;
  Pc = (xi(1) / 0.2e1 - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) / 0.2e1 - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) / 0.2e1 - (-(x(3) * xR(3) + x(4) * xR(4)) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3) / 0.2e1) * (dc * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (-(x(3) * xR(3) + x(4) * xR(4)) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) - dc * lcy * (xi(3) - xiR(3))) + (xi(2) / 0.2e1 - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) / 0.2e1 - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) / 0.2e1 - ((x(3) * xR(3) + x(4) * xR(4)) * (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) + (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3) / 0.2e1) * (dc * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4)) * (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) + (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + dc * lcx * (xi(3) - xiR(3))) + (xi(3) / 0.2e1 - xiR(3) / 0.2e1) * (-dc * lcy * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (-(x(3) * xR(3) + x(4) * xR(4)) * (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) + (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + dc * lcx * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4)) * (xR(4) * (x(1) - xR(1)) + xR(3) * (x(2) - xR(2))) + (-xR(3) * (x(1) - xR(1)) + xR(4) * (x(2) - xR(2))) * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + sigczz * (xi(3) - xiR(3)));
  Wr = (vx / 0.2e1 - (caR * ca + saR * sa) * vxR / 0.2e1 - (-saR * ca + sa * caR) * vyR / 0.2e1 - (-(caR * ca + saR * sa) * (-saR * (rx - rxR) + caR * (ry - ryR)) + (caR * (rx - rxR) + saR * (ry - ryR)) * (-saR * ca + sa * caR)) * wzR / 0.2e1) * mc * (vx - (caR * ca + saR * sa) * vxR - (-saR * ca + sa * caR) * vyR - (-(caR * ca + saR * sa) * (-saR * (rx - rxR) + caR * (ry - ryR)) + (caR * (rx - rxR) + saR * (ry - ryR)) * (-saR * ca + sa * caR)) * wzR) + (vy / 0.2e1 - (saR * ca - sa * caR) * vxR / 0.2e1 - (caR * ca + saR * sa) * vyR / 0.2e1 - ((caR * ca + saR * sa) * (caR * (rx - rxR) + saR * (ry - ryR)) + (-saR * (rx - rxR) + caR * (ry - ryR)) * (-saR * ca + sa * caR)) * wzR / 0.2e1) * mc * (vy - (saR * ca - sa * caR) * vxR - (caR * ca + saR * sa) * vyR - ((caR * ca + saR * sa) * (caR * (rx - rxR) + saR * (ry - ryR)) + (-saR * (rx - rxR) + caR * (ry - ryR)) * (-saR * ca + sa * caR)) * wzR) + kc * rx ^ 2 / 0.2e1 + kc * rxR ^ 2 / 0.2e1 + kc * ry ^ 2 / 0.2e1 + kc * ryR ^ 2 / 0.2e1 - kc * rx * rxR - kc * ry * ryR;
elseif (param.CtrlMode == 2)
  Mc = [mc 0 -mc * scy; 0 mc mc * scx; -mc * scy mc * scx Jczz;];
  fc = [-x(4) * xR(4) * dc * xiR(1) + x(4) * dc * xR(3) * xiR(2) - xR(4) * dc * x(3) * xiR(2) - mc * x(3) * xR(3) * xiRd(1) - xR(4) * mc * x(3) * xiRd(2) - x(4) * xR(4) * mc * xiRd(1) + x(4) * mc * xR(3) * xiRd(2) - dc * x(3) * xR(3) * xiR(1) + mc * x(3) * xR(3) * scx * xiR(3) ^ 2 - xR(4) * mc * x(3) * scx * xiRd(3) + xR(4) * mc * x(3) * scy * xiR(3) ^ 2 + mc * x(3) * xR(3) * scy * xiRd(3) + x(4) * xR(4) * mc * scx * xiR(3) ^ 2 + x(4) * mc * xR(3) * scx * xiRd(3) - x(4) * mc * xR(3) * scy * xiR(3) ^ 2 + x(4) * xR(4) * mc * scy * xiRd(3) + x(4) * xR(4) * dc * lcy * xiR(3) - xR(4) * dc * lcx * x(3) * xiR(3) + dc * lcy * x(3) * xR(3) * xiR(3) + x(4) * dc * lcx * xR(3) * xiR(3) + mc * xiR(2) * xiR(3) * xR(4) * x(4) + mc * xiR(1) * xiR(3) * xR(3) * x(4) - mc * xiR(1) * xiR(3) * x(3) * xR(4) + mc * xiR(2) * xiR(3) * xR(3) * x(3) + dc * xi(1) + (hcx * kc * x(4) - hcx * kc * xR(4) - hcy * kc * x(3) + hcy * kc * xR(3) + kc * x(1) - kc * xR(1)) * x(4) + (hcx * kc * x(3) - hcx * kc * xR(3) + hcy * kc * x(4) - hcy * kc * xR(4) + kc * x(2) - kc * xR(2)) * x(3) - dc * lcy * xi(3) - mc * xi(2) * xi(3) - mc * scx * xi(3) ^ 2; xR(4) * dc * x(3) * xiR(1) - dc * x(3) * xR(3) * xiR(2) - x(4) * xR(4) * dc * xiR(2) - x(4) * dc * xR(3) * xiR(1) - x(4) * xR(4) * mc * xiRd(2) - x(4) * mc * xR(3) * xiRd(1) + xR(4) * mc * x(3) * xiRd(1) - mc * x(3) * xR(3) * xiRd(2) - mc * xiR(1) * xiR(3) * xR(4) * x(4) + mc * xiR(2) * xiR(3) * xR(3) * x(4) - mc * xiR(2) * xiR(3) * x(3) * xR(4) - mc * xiR(1) * xiR(3) * xR(3) * x(3) - x(4) * xR(4) * dc * lcx * xiR(3) + x(4) * dc * lcy * xR(3) * xiR(3) + x(4) * mc * xR(3) * scx * xiR(3) ^ 2 - x(4) * xR(4) * mc * scx * xiRd(3) + x(4) * xR(4) * mc * scy * xiR(3) ^ 2 + x(4) * mc * xR(3) * scy * xiRd(3) - xR(4) * mc * x(3) * scx * xiR(3) ^ 2 - mc * x(3) * xR(3) * scx * xiRd(3) + mc * x(3) * xR(3) * scy * xiR(3) ^ 2 - xR(4) * mc * x(3) * scy * xiRd(3) - dc * lcx * x(3) * xR(3) * xiR(3) - xR(4) * dc * lcy * x(3) * xiR(3) + dc * xi(2) - (hcx * kc * x(4) - hcx * kc * xR(4) - hcy * kc * x(3) + hcy * kc * xR(3) + kc * x(1) - kc * xR(1)) * x(3) + (hcx * kc * x(3) - hcx * kc * xR(3) + hcy * kc * x(4) - hcy * kc * xR(4) + kc * x(2) - kc * xR(2)) * x(4) + dc * lcx * xi(3) + mc * xi(1) * xi(3) - mc * scy * xi(3) ^ 2; -x(3) * xR(3) * sigczz * xiR(3) - x(4) * xR(4) * sigczz * xiR(3) + mc * scx * xi(1) * xi(3) + mc * scy * xi(2) * xi(3) + Jczz * x(4) * xR(3) * xiR(3) ^ 2 - Jczz * x(4) * xR(4) * xiRd(3) - Jczz * xR(4) * x(3) * xiR(3) ^ 2 - Jczz * x(3) * xR(3) * xiRd(3) - mc * scx * xR(4) * x(3) * xiR(2) * xiR(3) - mc * scx * x(3) * xR(3) * xiR(1) * xiR(3) - mc * scy * x(4) * xR(4) * xiR(2) * xiR(3) - mc * scy * x(4) * xR(3) * xiR(1) * xiR(3) + mc * scy * xR(4) * x(3) * xiR(1) * xiR(3) - mc * scy * x(3) * xR(3) * xiR(2) * xiR(3) - mc * scx * x(4) * xR(4) * xiR(1) * xiR(3) + mc * scx * x(4) * xR(3) * xiR(2) * xiR(3) - mc * x(3) * xR(3) * scx * xiRd(2) + x(4) * xR(4) * mc * scy * xiRd(1) - x(4) * mc * xR(3) * scy * xiRd(2) - dc * lcx * x(3) * xR(3) * xiR(2) + x(4) * xR(4) * dc * lcy * xiR(1) - x(4) * dc * lcy * xR(3) * xiR(2) - x(4) * xR(4) * dc * lcx * xiR(2) - x(4) * dc * lcx * xR(3) * xiR(1) + xR(4) * dc * lcy * x(3) * xiR(2) + dc * lcy * x(3) * xR(3) * xiR(1) + xR(4) * dc * lcx * x(3) * xiR(1) - x(4) * xR(4) * mc * scx * xiRd(2) - x(4) * mc * xR(3) * scx * xiRd(1) + xR(4) * mc * x(3) * scy * xiRd(2) + mc * x(3) * xR(3) * scy * xiRd(1) + xR(4) * mc * x(3) * scx * xiRd(1) + sigczz * xi(3) + (hcx * kc * x(2) - hcx * kc * xR(2) - hcy * kc * x(1) + hcy * kc * xR(1) - kapczz * xR(3)) * x(4) - (hcx * kc * x(1) - hcx * kc * xR(1) + hcy * kc * x(2) - hcy * kc * xR(2) - kapczz * xR(4)) * x(3) + dc * lcx * xi(2) - dc * lcy * xi(1);];
  Tc = -mc * scy * xiR(1) * xiR(3) + mc * scx * xiR(2) * xiR(3) + mc * scx * xi(2) * xi(3) - mc * scy * xi(1) * xi(3) + Jczz * xi(3) ^ 2 / 0.2e1 + Jczz * xiR(3) ^ 2 / 0.2e1 + mc * xi(1) ^ 2 / 0.2e1 + mc * xiR(1) ^ 2 / 0.2e1 + mc * xi(2) ^ 2 / 0.2e1 + mc * xiR(2) ^ 2 / 0.2e1 - xR(4) * mc * x(3) * scx * xi(1) * xiR(3) - x(4) * mc * xR(3) * scx * xiR(1) * xi(3) + x(4) * mc * xR(3) * scy * xi(2) * xiR(3) + xR(4) * mc * x(3) * scy * xiR(2) * xi(3) + mc * x(3) * xR(3) * scy * xi(1) * xiR(3) + mc * x(3) * xR(3) * scy * xiR(1) * xi(3) + x(4) * mc * xR(3) * scx * xi(1) * xiR(3) + xR(4) * mc * x(3) * scx * xiR(1) * xi(3) - mc * x(3) * xR(3) * scx * xi(2) * xiR(3) - mc * x(3) * xR(3) * scx * xiR(2) * xi(3) + x(4) * xR(4) * mc * scy * xi(1) * xiR(3) + x(4) * xR(4) * mc * scy * xiR(1) * xi(3) - xR(4) * mc * x(3) * scy * xi(2) * xiR(3) - x(4) * mc * xR(3) * scy * xiR(2) * xi(3) - x(4) * xR(4) * mc * scx * xi(2) * xiR(3) - x(4) * xR(4) * mc * scx * xiR(2) * xi(3) - x(4) * xR(4) * mc * xi(1) * xiR(1) + x(4) * mc * xR(3) * xi(1) * xiR(2) + xR(4) * mc * x(3) * xiR(1) * xi(2) - mc * x(3) * xR(3) * xi(2) * xiR(2) - x(4) * xR(4) * mc * xi(2) * xiR(2) - x(4) * mc * xR(3) * xiR(1) * xi(2) - xR(4) * mc * x(3) * xi(1) * xiR(2) - mc * x(3) * xR(3) * xi(1) * xiR(1) - Jczz * x(3) * xR(3) * xi(3) * xiR(3) - Jczz * x(4) * xR(4) * xi(3) * xiR(3);
  Vc = x(4) * hcx * kc * x(1) - x(4) * hcx * kc * xR(1) + x(4) * hcy * kc * x(2) - x(4) * hcy * kc * xR(2) + hcx * kc * x(2) * x(3) - hcx * kc * xR(2) * x(3) - hcy * kc * x(1) * x(3) + hcy * kc * xR(1) * x(3) - xR(4) * hcy * kc * x(2) + xR(4) * hcy * kc * xR(2) + hcy * kc * x(1) * xR(3) - hcy * kc * xR(1) * xR(3) - xR(4) * hcx * kc * x(1) + xR(4) * hcx * kc * xR(1) - hcx * kc * x(2) * xR(3) + hcx * kc * xR(2) * xR(3) - kapczz * x(3) * xR(3) - kc * x(1) * xR(1) - kc * x(2) * xR(2) - x(4) * xR(4) * kapczz + kapczz + kc * x(1) ^ 2 / 0.2e1 + kc * xR(1) ^ 2 / 0.2e1 + kc * x(2) ^ 2 / 0.2e1 + kc * xR(2) ^ 2 / 0.2e1;
  Pc = dc * lcx * xi(2) * xi(3) + dc * lcx * xiR(2) * xiR(3) - dc * lcy * xi(1) * xi(3) - dc * lcy * xiR(1) * xiR(3) - dc * x(3) * xR(3) * xi(1) * xiR(1) - x(4) * xR(4) * dc * xi(1) * xiR(1) + x(4) * dc * xR(3) * xi(1) * xiR(2) + xR(4) * dc * x(3) * xiR(1) * xi(2) - dc * x(3) * xR(3) * xi(2) * xiR(2) - x(4) * xR(4) * dc * xi(2) * xiR(2) - x(4) * dc * xR(3) * xiR(1) * xi(2) - xR(4) * dc * x(3) * xi(1) * xiR(2) - x(3) * xR(3) * sigczz * xi(3) * xiR(3) - x(4) * xR(4) * sigczz * xi(3) * xiR(3) + dc * xi(1) ^ 2 / 0.2e1 + dc * xiR(1) ^ 2 / 0.2e1 + dc * xi(2) ^ 2 / 0.2e1 + dc * xiR(2) ^ 2 / 0.2e1 + sigczz * xi(3) ^ 2 / 0.2e1 + sigczz * xiR(3) ^ 2 / 0.2e1 - dc * lcx * x(3) * xR(3) * xi(2) * xiR(3) - dc * lcx * x(3) * xR(3) * xiR(2) * xi(3) + x(4) * xR(4) * dc * lcy * xi(1) * xiR(3) + x(4) * xR(4) * dc * lcy * xiR(1) * xi(3) - xR(4) * dc * lcy * x(3) * xi(2) * xiR(3) - x(4) * dc * lcy * xR(3) * xiR(2) * xi(3) - x(4) * xR(4) * dc * lcx * xi(2) * xiR(3) - x(4) * xR(4) * dc * lcx * xiR(2) * xi(3) - xR(4) * dc * lcx * x(3) * xi(1) * xiR(3) - x(4) * dc * lcx * xR(3) * xiR(1) * xi(3) + x(4) * dc * lcy * xR(3) * xi(2) * xiR(3) + xR(4) * dc * lcy * x(3) * xiR(2) * xi(3) + dc * lcy * x(3) * xR(3) * xi(1) * xiR(3) + dc * lcy * x(3) * xR(3) * xiR(1) * xi(3) + x(4) * dc * lcx * xR(3) * xi(1) * xiR(3) + xR(4) * dc * lcx * x(3) * xiR(1) * xi(3);
  Wr = -ca * caR * mc * vx * vxR + ca * mc * saR * vx * vyR + caR * mc * sa * vxR * vy - mc * sa * saR * vy * vyR - ca * caR * mc * vy * vyR - ca * mc * saR * vxR * vy - caR * mc * sa * vx * vyR - mc * sa * saR * vx * vxR + mc * vx ^ 2 / 0.2e1 + mc * vxR ^ 2 / 0.2e1 + mc * vy ^ 2 / 0.2e1 + mc * vyR ^ 2 / 0.2e1 + kc * rx ^ 2 / 0.2e1 + kc * rxR ^ 2 / 0.2e1 + kc * ry ^ 2 / 0.2e1 + kc * ryR ^ 2 / 0.2e1 - kc * rx * rxR - kc * ry * ryR;
elseif (param.CtrlMode == 3)
  Mc = [mc 0 -mc * scy; 0 mc mc * scx; -mc * scy mc * scx Jczz;];
  fc = [dc * lcy * xiR(3) - mc * scx * xiR(3) ^ 2 + mc * scy * xiRd(3) + 2 * mc * xi(2) * xiR(3) - mc * x(2) * x(3) * xiR(3) ^ 2 + mc * xR(2) * x(3) * xiR(3) ^ 2 - mc * x(1) * x(3) * xiRd(3) + mc * xR(1) * x(3) * xiRd(3) - x(4) * mc * x(1) * xiR(3) ^ 2 + x(4) * mc * xR(1) * xiR(3) ^ 2 + x(4) * mc * x(2) * xiRd(3) - x(4) * mc * xR(2) * xiRd(3) + 2 * mc * scx * xi(3) * xiR(3) + x(4) * dc * x(2) * xiR(3) - x(4) * dc * xR(2) * xiR(3) - dc * x(1) * x(3) * xiR(3) + dc * xR(1) * x(3) * xiR(3) - x(4) * xR(4) * dc * xiR(1) + x(4) * dc * xR(3) * xiR(2) - xR(4) * dc * x(3) * xiR(2) - mc * x(3) * xR(3) * xiRd(1) - xR(4) * mc * x(3) * xiRd(2) - x(4) * xR(4) * mc * xiRd(1) + x(4) * mc * xR(3) * xiRd(2) - dc * x(3) * xR(3) * xiR(1) - mc * xiR(2) * xiR(3) * xR(4) * x(4) - mc * xiR(1) * xiR(3) * xR(3) * x(4) + mc * xiR(1) * xiR(3) * x(3) * xR(4) - mc * xiR(2) * xiR(3) * xR(3) * x(3) + dc * xi(1) + (hcx * kc * x(4) - hcx * kc * xR(4) - hcy * kc * x(3) + hcy * kc * xR(3) + kc * x(1) - kc * xR(1)) * x(4) + (hcx * kc * x(3) - hcx * kc * xR(3) + hcy * kc * x(4) - hcy * kc * xR(4) + kc * x(2) - kc * xR(2)) * x(3) - dc * lcy * xi(3) - mc * xi(2) * xi(3) - mc * scx * xi(3) ^ 2; mc * xiR(1) * xiR(3) * xR(4) * x(4) - mc * xiR(2) * xiR(3) * xR(3) * x(4) + mc * xiR(2) * xiR(3) * x(3) * xR(4) + mc * xiR(1) * xiR(3) * xR(3) * x(3) + dc * xi(2) - (hcx * kc * x(4) - hcx * kc * xR(4) - hcy * kc * x(3) + hcy * kc * xR(3) + kc * x(1) - kc * xR(1)) * x(3) + (hcx * kc * x(3) - hcx * kc * xR(3) + hcy * kc * x(4) - hcy * kc * xR(4) + kc * x(2) - kc * xR(2)) * x(4) - dc * lcx * xiR(3) - mc * scy * xiR(3) ^ 2 - mc * scx * xiRd(3) - 2 * mc * xi(1) * xiR(3) + dc * lcx * xi(3) + mc * xi(1) * xi(3) - mc * scy * xi(3) ^ 2 + 2 * mc * scy * xi(3) * xiR(3) - x(4) * dc * x(1) * xiR(3) + xR(4) * dc * x(3) * xiR(1) - dc * x(3) * xR(3) * xiR(2) - x(4) * xR(4) * dc * xiR(2) - x(4) * dc * xR(3) * xiR(1) - x(4) * xR(4) * mc * xiRd(2) - x(4) * mc * xR(3) * xiRd(1) + xR(4) * mc * x(3) * xiRd(1) - mc * x(3) * xR(3) * xiRd(2) + x(4) * dc * xR(1) * xiR(3) - dc * x(2) * x(3) * xiR(3) + dc * xR(2) * x(3) * xiR(3) - mc * xR(1) * x(3) * xiR(3) ^ 2 - mc * x(2) * x(3) * xiRd(3) + mc * xR(2) * x(3) * xiRd(3) - x(4) * mc * x(2) * xiR(3) ^ 2 + x(4) * mc * xR(2) * xiR(3) ^ 2 - x(4) * mc * x(1) * xiRd(3) + x(4) * mc * xR(1) * xiRd(3) + mc * x(1) * x(3) * xiR(3) ^ 2; -mc * xR(1) * x(3) * scy * xiRd(3) - mc * x(2) * x(3) * scx * xiRd(3) + mc * xR(2) * x(3) * scx * xiRd(3) - x(4) * mc * x(2) * scy * xiRd(3) + x(4) * mc * xR(2) * scy * xiRd(3) + mc * x(1) * x(3) * scx * xiR(3) ^ 2 + x(4) * mc * x(1) * scy * xiR(3) ^ 2 - x(4) * mc * xR(1) * scy * xiR(3) ^ 2 - x(4) * mc * x(2) * scx * xiR(3) ^ 2 + x(4) * mc * xR(2) * scx * xiR(3) ^ 2 - x(4) * mc * x(1) * scx * xiRd(3) + x(4) * mc * xR(1) * scx * xiRd(3) - dc * lcx * x(2) * x(3) * xiR(3) + dc * lcx * xR(2) * x(3) * xiR(3) + dc * lcy * x(1) * x(3) * xiR(3) - mc * x(3) * xR(3) * scx * xiRd(2) + x(4) * xR(4) * mc * scy * xiRd(1) - x(4) * mc * xR(3) * scy * xiRd(2) - dc * lcx * x(3) * xR(3) * xiR(2) + x(4) * xR(4) * dc * lcy * xiR(1) - x(4) * dc * lcy * xR(3) * xiR(2) - x(4) * xR(4) * dc * lcx * xiR(2) - x(4) * dc * lcx * xR(3) * xiR(1) + xR(4) * dc * lcy * x(3) * xiR(2) + dc * lcy * x(3) * xR(3) * xiR(1) + xR(4) * dc * lcx * x(3) * xiR(1) - x(4) * xR(4) * mc * scx * xiRd(2) - x(4) * mc * xR(3) * scx * xiRd(1) + xR(4) * mc * x(3) * scy * xiRd(2) + mc * x(3) * xR(3) * scy * xiRd(1) + xR(4) * mc * x(3) * scx * xiRd(1) - dc * lcy * xR(1) * x(3) * xiR(3) - x(4) * dc * lcx * x(1) * xiR(3) + x(4) * dc * lcx * xR(1) * xiR(3) - x(4) * dc * lcy * x(2) * xiR(3) + x(4) * dc * lcy * xR(2) * xiR(3) - mc * xR(1) * x(3) * scx * xiR(3) ^ 2 + mc * x(2) * x(3) * scy * xiR(3) ^ 2 - mc * xR(2) * x(3) * scy * xiR(3) ^ 2 + mc * x(1) * x(3) * scy * xiRd(3) + sigczz * xi(3) - sigczz * xiR(3) - Jczz * xiRd(3) + (hcx * kc * x(2) - hcx * kc * xR(2) - hcy * kc * x(1) + hcy * kc * xR(1) - kapczz * xR(3)) * x(4) - (hcx * kc * x(1) - hcx * kc * xR(1) + hcy * kc * x(2) - hcy * kc * xR(2) - kapczz * xR(4)) * x(3) + dc * lcx * xi(2) - dc * lcy * xi(1) - 2 * mc * scx * xi(1) * xiR(3) - 2 * mc * scy * xi(2) * xiR(3) + mc * scx * xi(1) * xi(3) + mc * scy * xi(2) * xi(3) + mc * scy * x(3) * xR(3) * xiR(2) * xiR(3) + mc * scx * x(4) * xR(4) * xiR(1) * xiR(3) - mc * scx * x(4) * xR(3) * xiR(2) * xiR(3) + mc * scx * xR(4) * x(3) * xiR(2) * xiR(3) + mc * scx * x(3) * xR(3) * xiR(1) * xiR(3) + mc * scy * x(4) * xR(4) * xiR(2) * xiR(3) + mc * scy * x(4) * xR(3) * xiR(1) * xiR(3) - mc * scy * xR(4) * x(3) * xiR(1) * xiR(3);];
  Tc = Jczz * xi(3) ^ 2 / 0.2e1 + Jczz * xiR(3) ^ 2 / 0.2e1 + mc * xi(1) ^ 2 / 0.2e1 + mc * xiR(1) ^ 2 / 0.2e1 + mc * xi(2) ^ 2 / 0.2e1 + mc * xiR(2) ^ 2 / 0.2e1 + mc * xR(2) ^ 2 * xiR(3) ^ 2 / 0.2e1 + mc * xR(1) ^ 2 * xiR(3) ^ 2 / 0.2e1 + mc * x(1) ^ 2 * xiR(3) ^ 2 / 0.2e1 + mc * x(2) ^ 2 * xiR(3) ^ 2 / 0.2e1 - Jczz * xi(3) * xiR(3) - xR(4) * mc * x(2) * xiR(1) * xiR(3) + xR(4) * mc * xR(2) * xiR(1) * xiR(3) + mc * x(1) * xR(3) * xiR(1) * xiR(3) - mc * xR(1) * xR(3) * xiR(1) * xiR(3) + xR(4) * mc * x(1) * xiR(2) * xiR(3) - xR(4) * mc * xR(1) * xiR(2) * xiR(3) + mc * x(2) * xR(3) * xiR(2) * xiR(3) - mc * xR(2) * xR(3) * xiR(2) * xiR(3) + x(4) * mc * x(1) * scx * xiR(3) ^ 2 - x(4) * mc * xR(1) * scx * xiR(3) ^ 2 + x(4) * mc * x(2) * scy * xiR(3) ^ 2 - x(4) * mc * xR(2) * scy * xiR(3) ^ 2 - x(4) * mc * x(1) * xi(2) * xiR(3) + x(4) * mc * xR(1) * xi(2) * xiR(3) + x(4) * mc * x(2) * xi(1) * xiR(3) - x(4) * mc * xR(2) * xi(1) * xiR(3) - mc * x(1) * x(3) * scy * xiR(3) ^ 2 + mc * xR(1) * x(3) * scy * xiR(3) ^ 2 + mc * x(2) * x(3) * scx * xiR(3) ^ 2 - mc * xR(2) * x(3) * scx * xiR(3) ^ 2 - mc * x(1) * x(3) * xi(1) * xiR(3) + mc * xR(1) * x(3) * xi(1) * xiR(3) - mc * x(2) * x(3) * xi(2) * xiR(3) + mc * xR(2) * x(3) * xi(2) * xiR(3) - x(4) * xR(4) * mc * xi(1) * xiR(1) + x(4) * mc * xR(3) * xi(1) * xiR(2) + xR(4) * mc * x(3) * xiR(1) * xi(2) - mc * x(3) * xR(3) * xi(2) * xiR(2) - x(4) * xR(4) * mc * xi(2) * xiR(2) - x(4) * mc * xR(3) * xiR(1) * xi(2) - xR(4) * mc * x(3) * xi(1) * xiR(2) - mc * x(3) * xR(3) * xi(1) * xiR(1) - mc * scx * xi(2) * xiR(3) + mc * scy * xi(1) * xiR(3) - mc * x(2) * xR(2) * xiR(3) ^ 2 - mc * x(1) * xR(1) * xiR(3) ^ 2 + mc * scx * xi(2) * xi(3) - mc * scy * xi(1) * xi(3) + mc * x(3) * xR(3) * scx * xiR(2) * xiR(3) + x(4) * mc * xR(3) * scy * xiR(2) * xiR(3) - xR(4) * mc * x(3) * scy * xiR(2) * xiR(3) + x(4) * mc * xR(3) * scx * xiR(1) * xiR(3) - xR(4) * mc * x(3) * scx * xiR(1) * xiR(3) - x(4) * xR(4) * mc * scy * xiR(1) * xiR(3) - mc * x(3) * xR(3) * scy * xiR(1) * xiR(3) - mc * xR(1) * x(3) * scy * xi(3) * xiR(3) - mc * x(2) * x(3) * scx * xi(3) * xiR(3) + mc * xR(2) * x(3) * scx * xi(3) * xiR(3) - x(4) * mc * x(1) * scx * xi(3) * xiR(3) + x(4) * mc * xR(1) * scx * xi(3) * xiR(3) - x(4) * mc * x(2) * scy * xi(3) * xiR(3) + x(4) * mc * xR(2) * scy * xi(3) * xiR(3) + mc * x(1) * x(3) * scy * xi(3) * xiR(3) + xR(4) * mc * x(3) * scx * xiR(1) * xi(3) - mc * x(3) * xR(3) * scx * xiR(2) * xi(3) + x(4) * xR(4) * mc * scy * xiR(1) * xi(3) - x(4) * mc * xR(3) * scy * xiR(2) * xi(3) - x(4) * xR(4) * mc * scx * xiR(2) * xi(3) - x(4) * mc * xR(3) * scx * xiR(1) * xi(3) + xR(4) * mc * x(3) * scy * xiR(2) * xi(3) + mc * x(3) * xR(3) * scy * xiR(1) * xi(3) + x(4) * xR(4) * mc * scx * xiR(2) * xiR(3);
  Vc = x(4) * hcx * kc * x(1) - x(4) * hcx * kc * xR(1) + x(4) * hcy * kc * x(2) - x(4) * hcy * kc * xR(2) + hcx * kc * x(2) * x(3) - hcx * kc * xR(2) * x(3) - hcy * kc * x(1) * x(3) + hcy * kc * xR(1) * x(3) - xR(4) * hcy * kc * x(2) + xR(4) * hcy * kc * xR(2) + hcy * kc * x(1) * xR(3) - hcy * kc * xR(1) * xR(3) - xR(4) * hcx * kc * x(1) + xR(4) * hcx * kc * xR(1) - hcx * kc * x(2) * xR(3) + hcx * kc * xR(2) * xR(3) - kapczz * x(3) * xR(3) - kc * x(1) * xR(1) - kc * x(2) * xR(2) - x(4) * xR(4) * kapczz + kapczz + kc * x(1) ^ 2 / 0.2e1 + kc * xR(1) ^ 2 / 0.2e1 + kc * x(2) ^ 2 / 0.2e1 + kc * xR(2) ^ 2 / 0.2e1;
  Pc = -dc * lcx * xi(2) * xiR(3) + dc * lcy * xi(1) * xiR(3) - dc * x(1) * xR(1) * xiR(3) ^ 2 - dc * x(2) * xR(2) * xiR(3) ^ 2 - dc * lcx * x(2) * x(3) * xi(3) * xiR(3) + dc * lcx * xR(2) * x(3) * xi(3) * xiR(3) + dc * lcy * x(1) * x(3) * xi(3) * xiR(3) - dc * lcy * xR(1) * x(3) * xi(3) * xiR(3) - x(4) * dc * lcx * x(1) * xi(3) * xiR(3) + x(4) * dc * lcx * xR(1) * xi(3) * xiR(3) - x(4) * dc * lcy * x(2) * xi(3) * xiR(3) + x(4) * dc * lcy * xR(2) * xi(3) * xiR(3) + x(4) * dc * lcy * xR(3) * xiR(2) * xiR(3) - xR(4) * dc * lcy * x(3) * xiR(2) * xiR(3) + x(4) * xR(4) * dc * lcx * xiR(2) * xiR(3) + dc * lcx * x(3) * xR(3) * xiR(2) * xiR(3) + x(4) * dc * lcx * xR(3) * xiR(1) * xiR(3) - xR(4) * dc * lcx * x(3) * xiR(1) * xiR(3) - x(4) * xR(4) * dc * lcy * xiR(1) * xiR(3) - dc * lcy * x(3) * xR(3) * xiR(1) * xiR(3) + dc * lcx * xi(2) * xi(3) - dc * lcy * xi(1) * xi(3) - dc * x(3) * xR(3) * xi(1) * xiR(1) - x(4) * xR(4) * dc * xi(1) * xiR(1) + x(4) * dc * xR(3) * xi(1) * xiR(2) + xR(4) * dc * x(3) * xiR(1) * xi(2) - dc * x(3) * xR(3) * xi(2) * xiR(2) - x(4) * xR(4) * dc * xi(2) * xiR(2) - x(4) * dc * xR(3) * xiR(1) * xi(2) - xR(4) * dc * x(3) * xi(1) * xiR(2) + dc * xi(1) ^ 2 / 0.2e1 + dc * xiR(1) ^ 2 / 0.2e1 + dc * xi(2) ^ 2 / 0.2e1 + dc * xiR(2) ^ 2 / 0.2e1 + sigczz * xi(3) ^ 2 / 0.2e1 + sigczz * xiR(3) ^ 2 / 0.2e1 - dc * lcx * x(3) * xR(3) * xiR(2) * xi(3) + x(4) * xR(4) * dc * lcy * xiR(1) * xi(3) - x(4) * dc * lcy * xR(3) * xiR(2) * xi(3) - x(4) * xR(4) * dc * lcx * xiR(2) * xi(3) - x(4) * dc * lcx * xR(3) * xiR(1) * xi(3) + xR(4) * dc * lcy * x(3) * xiR(2) * xi(3) + dc * lcy * x(3) * xR(3) * xiR(1) * xi(3) + xR(4) * dc * lcx * x(3) * xiR(1) * xi(3) + dc * xR(1) ^ 2 * xiR(3) ^ 2 / 0.2e1 + dc * x(2) ^ 2 * xiR(3) ^ 2 / 0.2e1 + dc * xR(2) ^ 2 * xiR(3) ^ 2 / 0.2e1 + dc * x(1) ^ 2 * xiR(3) ^ 2 / 0.2e1 - sigczz * xi(3) * xiR(3) + xR(4) * dc * x(1) * xiR(2) * xiR(3) - xR(4) * dc * xR(1) * xiR(2) * xiR(3) + dc * x(2) * xR(3) * xiR(2) * xiR(3) - dc * xR(2) * xR(3) * xiR(2) * xiR(3) + x(4) * dc * lcx * x(1) * xiR(3) ^ 2 - x(4) * dc * lcx * xR(1) * xiR(3) ^ 2 + x(4) * dc * lcy * x(2) * xiR(3) ^ 2 - x(4) * dc * lcy * xR(2) * xiR(3) ^ 2 - x(4) * dc * x(1) * xi(2) * xiR(3) + x(4) * dc * xR(1) * xi(2) * xiR(3) + x(4) * dc * x(2) * xi(1) * xiR(3) - x(4) * dc * xR(2) * xi(1) * xiR(3) + dc * lcx * x(2) * x(3) * xiR(3) ^ 2 - dc * lcx * xR(2) * x(3) * xiR(3) ^ 2 - dc * lcy * x(1) * x(3) * xiR(3) ^ 2 + dc * lcy * xR(1) * x(3) * xiR(3) ^ 2 - dc * x(1) * x(3) * xi(1) * xiR(3) + dc * xR(1) * x(3) * xi(1) * xiR(3) - dc * x(2) * x(3) * xi(2) * xiR(3) + dc * xR(2) * x(3) * xi(2) * xiR(3) - xR(4) * dc * x(2) * xiR(1) * xiR(3) + xR(4) * dc * xR(2) * xiR(1) * xiR(3) + dc * x(1) * xR(3) * xiR(1) * xiR(3) - dc * xR(1) * xR(3) * xiR(1) * xiR(3);
  Wr = -ca * caR * mc * vx * vxR + ca * mc * saR * vx * vyR + caR * mc * sa * vxR * vy - mc * sa * saR * vy * vyR - ca * caR * mc * vy * vyR - ca * mc * saR * vxR * vy - caR * mc * sa * vx * vyR - mc * sa * saR * vx * vxR + mc * vx ^ 2 / 0.2e1 + mc * vxR ^ 2 / 0.2e1 + mc * vy ^ 2 / 0.2e1 + mc * vyR ^ 2 / 0.2e1 + kc * rx ^ 2 / 0.2e1 + kc * rxR ^ 2 / 0.2e1 + kc * ry ^ 2 / 0.2e1 + kc * ryR ^ 2 / 0.2e1 - kc * rx * rxR - kc * ry * ryR + caR * mc * rx * vyR * wzR - caR * mc * rxR * vyR * wzR + mc * ry * saR * vyR * wzR - mc * ryR * saR * vyR * wzR - caR * mc * ry * vxR * wzR + caR * mc * ryR * vxR * wzR + mc * rx * saR * vxR * wzR - mc * rxR * saR * vxR * wzR - mc * ry * sa * vy * wzR + mc * ryR * sa * vy * wzR + mc * rxR * sa * vx * wzR - ca * mc * rx * vy * wzR + ca * mc * rxR * vy * wzR + ca * mc * ry * vx * wzR - ca * mc * ryR * vx * wzR - mc * rx * sa * vx * wzR - mc * rx * rxR * wzR ^ 2 - mc * ry * ryR * wzR ^ 2 + mc * ry ^ 2 * wzR ^ 2 / 0.2e1 + mc * ryR ^ 2 * wzR ^ 2 / 0.2e1 + mc * rx ^ 2 * wzR ^ 2 / 0.2e1 + mc * rxR ^ 2 * wzR ^ 2 / 0.2e1;
elseif (param.CtrlMode == 4)
  Mc = [mc 0 -mc * scy; 0 mc mc * scx; -mc * scy mc * scx Jczz;];
  fc = [-mc * ((x(3) * xR(3) + x(4) * xR(4)) * xiRd(1) + (x(3) * xR(4) - x(4) * xR(3)) * xiRd(2) + (hcx * (x(3) * xR(4) - x(4) * xR(3)) + hcy * (-x(3) * xR(3) - x(4) * xR(4) + 1)) * xiRd(3) + (-x(3) * xR(4) * xi(3) + x(3) * xR(4) * xiR(3) + x(4) * xR(3) * xi(3) - x(4) * xR(3) * xiR(3)) * xiR(1) + (x(3) * xR(3) * xi(3) - x(3) * xR(3) * xiR(3) + x(4) * xR(4) * xi(3) - x(4) * xR(4) * xiR(3)) * xiR(2) + ((hcx * xR(4) - hcy * xR(3)) * x(4) * xi(3) - (-hcx * xR(3) - hcy * xR(4)) * x(3) * xi(3) + (-hcx * x(4) - hcy * x(3)) * xR(4) * xiR(3) - (hcx * x(3) - hcy * x(4)) * xR(3) * xiR(3)) * xiR(3)) + mc * scy * xiRd(3) - mc * xi(3) * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4) - 1) * hcx + hcy * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) - mc * scx * xi(3) * (xi(3) - xiR(3)) + dc * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (hcx * (x(3) * xR(4) - x(4) * xR(3)) + hcy * (-x(3) * xR(3) - x(4) * xR(4) + 1)) * xiR(3)) - dc * lcy * (xi(3) - xiR(3)) + (hcx * kc * x(4) - hcx * kc * xR(4) - hcy * kc * x(3) + hcy * kc * xR(3) + kc * x(1) - kc * xR(1)) * x(4) + (hcx * kc * x(3) - hcx * kc * xR(3) + hcy * kc * x(4) - hcy * kc * xR(4) + kc * x(2) - kc * xR(2)) * x(3); -mc * ((-x(3) * xR(4) + x(4) * xR(3)) * xiRd(1) + (x(3) * xR(3) + x(4) * xR(4)) * xiRd(2) + ((x(3) * xR(3) + x(4) * xR(4) - 1) * hcx + hcy * (x(3) * xR(4) - x(4) * xR(3))) * xiRd(3) + (-x(3) * xR(3) * xi(3) + x(3) * xR(3) * xiR(3) - x(4) * xR(4) * xi(3) + x(4) * xR(4) * xiR(3)) * xiR(1) + (-x(3) * xR(4) * xi(3) + x(3) * xR(4) * xiR(3) + x(4) * xR(3) * xi(3) - x(4) * xR(3) * xiR(3)) * xiR(2) + ((hcx * xR(3) + hcy * xR(4)) * x(4) * xi(3) - (hcx * xR(4) - hcy * xR(3)) * x(3) * xi(3) + (hcx * x(3) - hcy * x(4)) * xR(4) * xiR(3) - (hcx * x(4) + hcy * x(3)) * xR(3) * xiR(3)) * xiR(3)) - mc * scx * xiRd(3) + mc * xi(3) * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (hcx * (x(3) * xR(4) - x(4) * xR(3)) + hcy * (-x(3) * xR(3) - x(4) * xR(4) + 1)) * xiR(3)) - mc * scy * xi(3) * (xi(3) - xiR(3)) + dc * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4) - 1) * hcx + hcy * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + dc * lcx * (xi(3) - xiR(3)) - (hcx * kc * x(4) - hcx * kc * xR(4) - hcy * kc * x(3) + hcy * kc * xR(3) + kc * x(1) - kc * xR(1)) * x(3) + (hcx * kc * x(3) - hcx * kc * xR(3) + hcy * kc * x(4) - hcy * kc * xR(4) + kc * x(2) - kc * xR(2)) * x(4); mc * scy * ((x(3) * xR(3) + x(4) * xR(4)) * xiRd(1) + (x(3) * xR(4) - x(4) * xR(3)) * xiRd(2) + (hcx * (x(3) * xR(4) - x(4) * xR(3)) + hcy * (-x(3) * xR(3) - x(4) * xR(4) + 1)) * xiRd(3) + (-x(3) * xR(4) * xi(3) + x(3) * xR(4) * xiR(3) + x(4) * xR(3) * xi(3) - x(4) * xR(3) * xiR(3)) * xiR(1) + (x(3) * xR(3) * xi(3) - x(3) * xR(3) * xiR(3) + x(4) * xR(4) * xi(3) - x(4) * xR(4) * xiR(3)) * xiR(2) + ((hcx * xR(4) - hcy * xR(3)) * x(4) * xi(3) - (-hcx * xR(3) - hcy * xR(4)) * x(3) * xi(3) + (-hcx * x(4) - hcy * x(3)) * xR(4) * xiR(3) - (hcx * x(3) - hcy * x(4)) * xR(3) * xiR(3)) * xiR(3)) - mc * scx * ((-x(3) * xR(4) + x(4) * xR(3)) * xiRd(1) + (x(3) * xR(3) + x(4) * xR(4)) * xiRd(2) + ((x(3) * xR(3) + x(4) * xR(4) - 1) * hcx + hcy * (x(3) * xR(4) - x(4) * xR(3))) * xiRd(3) + (-x(3) * xR(3) * xi(3) + x(3) * xR(3) * xiR(3) - x(4) * xR(4) * xi(3) + x(4) * xR(4) * xiR(3)) * xiR(1) + (-x(3) * xR(4) * xi(3) + x(3) * xR(4) * xiR(3) + x(4) * xR(3) * xi(3) - x(4) * xR(3) * xiR(3)) * xiR(2) + ((hcx * xR(3) + hcy * xR(4)) * x(4) * xi(3) - (hcx * xR(4) - hcy * xR(3)) * x(3) * xi(3) + (hcx * x(3) - hcy * x(4)) * xR(4) * xiR(3) - (hcx * x(4) + hcy * x(3)) * xR(3) * xiR(3)) * xiR(3)) - Jczz * xiRd(3) + mc * scx * xi(3) * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (hcx * (x(3) * xR(4) - x(4) * xR(3)) + hcy * (-x(3) * xR(3) - x(4) * xR(4) + 1)) * xiR(3)) + mc * scy * xi(3) * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4) - 1) * hcx + hcy * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) - dc * lcy * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (hcx * (x(3) * xR(4) - x(4) * xR(3)) + hcy * (-x(3) * xR(3) - x(4) * xR(4) + 1)) * xiR(3)) + dc * lcx * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4) - 1) * hcx + hcy * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + sigczz * (xi(3) - xiR(3)) + (hcx * kc * x(2) - hcx * kc * xR(2) - hcy * kc * x(1) + hcy * kc * xR(1) - kapczz * xR(3)) * x(4) - (hcx * kc * x(1) - hcx * kc * xR(1) + hcy * kc * x(2) - hcy * kc * xR(2) - kapczz * xR(4)) * x(3);];
  Tc = ((xi(1) / 0.2e1 - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) / 0.2e1 - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) / 0.2e1 - (hcx * (x(3) * xR(4) - x(4) * xR(3)) + hcy * (-x(3) * xR(3) - x(4) * xR(4) + 0.1e1)) * xiR(3) / 0.2e1) * mc - (xi(3) / 0.2e1 - xiR(3) / 0.2e1) * mc * scy) * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (hcx * (x(3) * xR(4) - x(4) * xR(3)) + hcy * (-x(3) * xR(3) - x(4) * xR(4) + 0.1e1)) * xiR(3)) + ((xi(2) / 0.2e1 - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) / 0.2e1 - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) / 0.2e1 - ((x(3) * xR(3) + x(4) * xR(4) - 0.1e1) * hcx + hcy * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3) / 0.2e1) * mc + (xi(3) / 0.2e1 - xiR(3) / 0.2e1) * mc * scx) * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4) - 0.1e1) * hcx + hcy * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + (-(xi(1) / 0.2e1 - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) / 0.2e1 - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) / 0.2e1 - (hcx * (x(3) * xR(4) - x(4) * xR(3)) + hcy * (-x(3) * xR(3) - x(4) * xR(4) + 0.1e1)) * xiR(3) / 0.2e1) * mc * scy + (xi(2) / 0.2e1 - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) / 0.2e1 - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) / 0.2e1 - ((x(3) * xR(3) + x(4) * xR(4) - 0.1e1) * hcx + hcy * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3) / 0.2e1) * mc * scx + (xi(3) / 0.2e1 - xiR(3) / 0.2e1) * Jczz) * (xi(3) - xiR(3));
  Vc = x(4) * hcx * kc * x(1) - x(4) * hcx * kc * xR(1) + x(4) * hcy * kc * x(2) - x(4) * hcy * kc * xR(2) + hcx * kc * x(2) * x(3) - hcx * kc * xR(2) * x(3) - hcy * kc * x(1) * x(3) + hcy * kc * xR(1) * x(3) - xR(4) * hcy * kc * x(2) + xR(4) * hcy * kc * xR(2) + hcy * kc * x(1) * xR(3) - hcy * kc * xR(1) * xR(3) - xR(4) * hcx * kc * x(1) + xR(4) * hcx * kc * xR(1) - hcx * kc * x(2) * xR(3) + hcx * kc * xR(2) * xR(3) - kc * x(2) * xR(2) - kc * x(1) * xR(1) - kapczz * x(3) * xR(3) - x(4) * xR(4) * kapczz + kapczz + kc * x(1) ^ 2 / 0.2e1 + kc * xR(1) ^ 2 / 0.2e1 + kc * x(2) ^ 2 / 0.2e1 + kc * xR(2) ^ 2 / 0.2e1;
  Pc = (xi(1) / 0.2e1 - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) / 0.2e1 - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) / 0.2e1 - (hcx * (x(3) * xR(4) - x(4) * xR(3)) + hcy * (-x(3) * xR(3) - x(4) * xR(4) + 0.1e1)) * xiR(3) / 0.2e1) * (dc * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (hcx * (x(3) * xR(4) - x(4) * xR(3)) + hcy * (-x(3) * xR(3) - x(4) * xR(4) + 0.1e1)) * xiR(3)) - dc * lcy * (xi(3) - xiR(3))) + (xi(2) / 0.2e1 - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) / 0.2e1 - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) / 0.2e1 - ((x(3) * xR(3) + x(4) * xR(4) - 0.1e1) * hcx + hcy * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3) / 0.2e1) * (dc * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4) - 0.1e1) * hcx + hcy * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + dc * lcx * (xi(3) - xiR(3))) + (xi(3) / 0.2e1 - xiR(3) / 0.2e1) * (-dc * lcy * (xi(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(1) - (x(3) * xR(4) - x(4) * xR(3)) * xiR(2) - (hcx * (x(3) * xR(4) - x(4) * xR(3)) + hcy * (-x(3) * xR(3) - x(4) * xR(4) + 0.1e1)) * xiR(3)) + dc * lcx * (xi(2) - (-x(3) * xR(4) + x(4) * xR(3)) * xiR(1) - (x(3) * xR(3) + x(4) * xR(4)) * xiR(2) - ((x(3) * xR(3) + x(4) * xR(4) - 0.1e1) * hcx + hcy * (x(3) * xR(4) - x(4) * xR(3))) * xiR(3)) + sigczz * (xi(3) - xiR(3)));
  Wr = kc * rx ^ 2 / 0.2e1 + kc * rxR ^ 2 / 0.2e1 + kc * ry ^ 2 / 0.2e1 + kc * ryR ^ 2 / 0.2e1 - kc * rx * rxR - kc * ry * ryR + (vy / 0.2e1 - (ca * saR - caR * sa) * vxR / 0.2e1 - (ca * caR + sa * saR) * vyR / 0.2e1) * mc * (vy - (ca * saR - caR * sa) * vxR - (ca * caR + sa * saR) * vyR) + (vx / 0.2e1 - (ca * caR + sa * saR) * vxR / 0.2e1 - (-ca * saR + caR * sa) * vyR / 0.2e1) * mc * (vx - (ca * caR + sa * saR) * vxR - (-ca * saR + caR * sa) * vyR);
end
  
u = (Ba'*Mc*Ba) \ (Ba'*(Mc*M\f - fc));
Wc = Tc + Vc;

